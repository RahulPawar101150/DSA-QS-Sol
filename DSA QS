1) Trapping Rain Water:
Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

sol:
class Solution {
    public int trap(int[] height) {
       int n= height.length;

       //leftMax Boundary 
        int leftMax[] = new int [height.length];
        leftMax[0] = height[0];
        for(int i = 1; i<height.length; i++){
            leftMax[i] = Math.max(height[i], leftMax[i-1]);
        }

        //RaightMax Boundary
        int rightMax[]= new int[n];
        rightMax[n-1]= height[n-1];
        for(int i= n-2; i>=0; i--){
            rightMax[i] = Math.max( height[i], rightMax[i+1]);
        }

        int trappWater = 0;
        //loop
        for(int i=0; i<height.length; i++){

            int waterLevel = Math.min(leftMax[i], rightMax[i]);

            trappWater += waterLevel - height[i];
            
        }

        return trappWater;
   
        
    }
}
