spiral Matrix :
Given an m x n matrix, return all elements of the matrix in spiral order.
Example :
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

# code :
class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
      List<Integer> res = new ArrayList<>();
        int startRow=0;
        int startCol=0;
        int endRow=matrix.length-1;
        int endCol = matrix[0].length-1;

        while(startRow <= endRow && startCol <= endCol){

            //top
            for(int j=startCol; j<= endCol; j++){
                res.add(matrix[startRow][j]);
            }
            //right
            for(int i=startRow+1; i<= endRow; i++){
                 res.add (matrix[i][endCol]);
            }
            //bottom
            for(int j=endCol-1; j>= startCol; j--){
                if(startRow == endRow){
                    break;
                }
                res.add(matrix[endRow][j]);
            }
            //left
            for(int i=endRow-1; i>= startRow+1; i--){
                if(startCol == endCol){
                    break;
                }
                 res.add(matrix[i][startCol]);
            }
            startRow++;
            startCol++;
            endRow--;
            endCol--;
        } 
        return res;
        
    }
    
}
